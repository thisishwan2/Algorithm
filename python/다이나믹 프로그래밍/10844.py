# 끝자리가 0 혹은 9일경우 다음에 하나만 생성한다.
#끝자리가 8이거나 1이면 9랑 0을 하나는 만들어 낸다.
n=int(input())

dp=[[0 for _ in range(10)] for _ in range(n+1)]

for i in range(1,10):
    dp[1][i]=1


for i in range(2,n+1):
    for j in range(10):
        if j==0:
            dp[i][j]=dp[i-1][1]
        elif j==9:
            dp[i][j]=dp[i-1][8]
        else:
            dp[i][j]=dp[i-1][j-1]+dp[i-1][j+1]

print(sum(dp[n])%1000000000)

"""
        각 자리수에서 맨 뒤에 올수 있는 숫자의 개수(0~9)
          0  1  2  3  4  5  6  7  8  9

자리수(1)   0  1  1  1  1  1  1  1  1  1
자리수(2)   1  1  2  2  2  2  2  2  2  1
자리수(3)   1  3  3  4  4  4  4  4  3  2

맨 뒤에 0이 올 수 있는 경우의 수 - 10이 있다.(1개)
맨 뒤에 1이 올 수 있는 경우의 수 - 21이 있다.(1개)
맨 뒤에 2이 올 수 있는 경우의 수 - 12, 32이 있다.(2개)

-> 맨 뒤에 올수 있는 수(i) 가 1~8은 결국 이전 자리수의 i+1, i-1 의 값을 더한. (예로 자리수 3의 맨뒤의 수 4는 자리수 2의 맨뒤의수 3과 5의 합임(xx4 = x3 or x5 이어야 가능하기 때문 (23, 43, 45, 65))
   맨 뒤에 오는 수 i 가 0인 경우에는 0이전의 수는 없으므로 10 과 같은 형태만 가능 따라서 이전 자리수의 i=1이 해당 자리수의 0번 자리가 됨.
   9도 동일한 윈리
"""


"""
1_8 이 다음 0_9 갯수


n=1 \1\,2,3,4,5,6,7,\8\,|9|     0_9=1, 1_8=2   총 9 개
n=2 |10|,12,\21\,23,32,34,43,45,54,56,65,67,76,\78\,87,|89|,\98\  0_9=2, 1_8=3 총 17개
n=3 \101\,\121\,123,|210|,212,232,234,\321\,323,343,345,432,434,454,456,543,545,565,567,654,656,676,\678\,765,767
    ,787,|789|,876,\878\,\898\, ,987,|989|  0_9=3  1_8=6  총 32개

n=4 |1010|,1012,|1210|,1212,1232,1234,\2101\,\2121\,2123,\2321\,2323,2343,2345,|3210|,3212,3232,3234,3432,3434,3454,3456
    ,\4321\,4323,4343,4345,4543,4545,4565,4567,5432,5434,5454,5456,5654,5656,5676,\5678\,6543,6545,6565,6567,6765
    ,6767,6787,|6789|,7654,7656,7676,\7678\,7876,\7878\,\7898\,8765,8767,8787,|8789|,8987,|8989|,9876,\9878\,\9898\
    0_9=6  1_8=10

1_8=15??
"""